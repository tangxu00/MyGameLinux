/*************************************************************************
    > File Name: link4.c
    > Author: dooon
    > Mail: tangxu314@163.com 
    > Created Time: 2016年10月20日 星期四 20时21分19秒
 ************************************************************************/

#include<stdio.h>
#include<stdlib.h>
#define LAN sizeof(struct Student)
struct Student
	{
		long num;
		float score1,score2,score3;
		float aver;
		struct Student * next;
	};
int n;
struct Student*creat(void)
{
	struct Student * head;
	struct Student * p1, * p2;
	n=0;
	p1=p2=(struct Student * ) malloc(LAN);
	printf("Please enter the num and 3 score:(enter '0' to end)\n");
	scanf("%ld,%f,%f,%f",&p1->num,&p1->score1,&p1->score2,&p1->score3);
	head=NULL;
	while(p1->num!=0)
	{
		n=n+1;
		if(n==1)
			head=p1;
		else 
			p2->next=p1;
		p2=p1;
		 p1=(struct Student * )malloc(LAN);
		 scanf("%ld,%f,%f,%f",&p1->num,&p1->score1,&p1->score2,&p1->score3);
	}
	p2->next=NULL;
	return(head);
}
void average(struct Student *head)
{
	struct Student *p;
	p=head;
	if(head!=NULL)
		do 
			{
				p->aver=(p->score1+p->score2+p->score3)/3;
				printf("%ld %f %f %f %f\n",p->num,p->score1,p->score2,p->score3,p->aver);
				p=p->next;
			}
		while(p!=NULL);
}
int maxmum(struct Student *head)
{
	struct Student *p;
	int n;
	float max;
	p=head;
	if(head!=NULL)
	{
		n=p->num;
		max=p->aver;
		do
		{
			//p=p->next;
			if(max < p->aver)
			{	
			max=p->aver;
			n=p->num;
			}
			p=p->next;
		}
		while(p!=NULL);
	}
	printf("The hightest is:%d  score is:%f\n",n,max);
	return(0);
}
void find(struct Student *head)
{
	struct Student *p;
	p=head;
	int t,n;
	printf("press '0' to find\n");
	scanf("%d",&t);
	if(t==0)
	{
		printf("please enter the num:");
		scanf("%d",&n);
		if(head!=NULL)
		{
			do
			{
				if(n==p->num)
				{
					printf("this(%d)students score is:%f %f %f average is:%f",n,p->score1,p->score2,p->score3,p->aver);
				}
				p=p->next;
			}
			while(p!=NULL);
		}

	}
}
int main()
{
	struct Student * head;
	head=creat();
	average(head);
	maxmum(head);
	find(head);
	return 0;
};
